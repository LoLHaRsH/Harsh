#include<iostream>
using namespace std;

class Set {
    int arr[10];
    int it = 0;

public:
    void add(int ele) {
        if (!contains(ele) && it < 10) {
            arr[it++] = ele;
        }
    }

    void dlt(int ele) {
        int idx = -1;
        for (int i = 0; i < it; i++) {
            if (arr[i] == ele) {
                idx = i;
                break;
            }
        }
        if (idx != -1) {
            for (int i = idx; i < it - 1; i++) {
                arr[i] = arr[i + 1];
            }
            it--;
        }
    }

    bool contains(int ele) {
        for (int i = 0; i < it; i++) {
            if (arr[i] == ele)
                return true;
        }
        return false;
    }

    int size() {
        return it;
    }

    void disp() {
        for (int i = 0; i < it; i++) {
            cout << arr[i] << " ";
        }
        cout << endl;
    }

    void iterate() {
        cout << "Iterating over set: ";
        disp();
    }

    Set union_set(Set s1, Set s2) {
        Set res;
        for (int i = 0; i < s1.it; i++)
            res.add(s1.arr[i]);
        for (int i = 0; i < s2.it; i++)
            res.add(s2.arr[i]);
        return res;
    }

    Set intersection_set(Set s1, Set s2) {
        Set res;
        for (int i = 0; i < s1.it; i++) {
            if (s2.contains(s1.arr[i]))
                res.add(s1.arr[i]);
        }
        return res;
    }

    Set difference_set(Set s1, Set s2) {
        Set res;
        for (int i = 0; i < s1.it; i++) {
            if (!s2.contains(s1.arr[i]))
                res.add(s1.arr[i]);
        }
        return res;
    }
};

int main() {
    Set s1, s2;
    int ch;

    do {
        cout << "\n1. Add element\n2. Remove element\n3. Size\n4. Display\n5. Contains?\n"
             << "6. Union\n7. Intersection\n8. Iterator\n9. Difference\n10. Exit\n";
        cout << "Enter your choice: ";
        cin >> ch;

        if (ch == 1) {
            int ele;
            cout << "Enter element to add: ";
            cin >> ele;
            s1.add(ele);
        } else if (ch == 2) {
            int ele;
            cout << "Enter element to remove: ";
            cin >> ele;
            s1.dlt(ele);
        } else if (ch == 3) {
            cout << "Size: " << s1.size() << endl;
        } else if (ch == 4) {
            cout << "Set: ";
            s1.disp();
        } else if (ch == 5) {
            int ele;
            cout << "Enter element to check: ";
            cin >> ele;
            cout << (s1.contains(ele) ? "Present\n" : "Not Present\n");
        } else if (ch >= 6 && ch <= 9) {
            cout << "Enter 5 elements for second set:\n";
            for (int i = 0; i < 5; i++) {
                int num;
                cin >> num;
                s2.add(num);
            }

            Set res;
            if (ch == 6) {
                res = res.union_set(s1, s2);
                cout << "Union: ";
                res.disp();
            } else if (ch == 7) {
                res = res.intersection_set(s1, s2);
                cout << "Intersection: ";
                res.disp();
            } else if (ch == 8) {
                cout << "Iterator of set:\n";
                s1.iterate();
            } else if (ch == 9) {
                res = res.difference_set(s1, s2);
                cout << "Difference (Set1 - Set2): ";
                res.disp();
            }
        } else if (ch == 10) {
            cout << "Exited.\n";
        } else {
            cout << "Invalid choice!\n";
        }

    } while (ch != 10);

    return 0;
}
